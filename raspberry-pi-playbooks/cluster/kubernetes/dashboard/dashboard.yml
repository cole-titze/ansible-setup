---
- name: Deploy Kubernetes Dashboard using Helm
  hosts: control_plane
  gather_facts: false
  become: true

  environment:
    # The location of the kubeconfig file on the master.
    K8S_AUTH_KUBECONFIG: /etc/rancher/k3s/k3s.yaml
    PATH: "~/go/bin:{{ ansible_env.PATH }}"

  tasks:
    - name: Add Kubernetes Dashboard Helm repository
      kubernetes.core.helm_repository:
        name: kubernetes-dashboard
        repo_url: https://kubernetes.github.io/dashboard/

    - name: Update Helm repositories
      command: helm repo update
      changed_when: false

    - name: Install Kubernetes Dashboard
      kubernetes.core.helm:
        name: kubernetes-dashboard
        chart_ref: kubernetes-dashboard/kubernetes-dashboard
        release_namespace: kubernetes-dashboard
        create_namespace: true

    - name: Update Kubernetes Dashboard service to NodePort
      kubernetes.core.k8s:
        state: patched
        kind: Service
        namespace: kubernetes-dashboard
        name: kubernetes-dashboard-kong-proxy
        definition:
          spec:
            type: NodePort
            ports:
              - port: 443
                targetPort: 8443
                protocol: TCP
                nodePort: 30083

    - name: Create the Service Account for Kubernetes Dashboard
      kubernetes.core.k8s:
        state: present
        api_version: v1
        kind: ServiceAccount
        name: dashboard-admin-sa
        namespace: kubernetes-dashboard
      register: sa_creation
    
    - name: Register a variable if the Service Account is created
      set_fact:
        new_sa_created: true
      when: sa_creation.changed

    - name: Bind the Service Account to Cluster-Admin role
      kubernetes.core.k8s:
        state: present
        api_version: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        name: dashboard-admin-sa-binding
        namespace: kubernetes-dashboard
        definition:
          kind: ClusterRoleBinding
          apiVersion: rbac.authorization.k8s.io/v1
          metadata:
            name: dashboard-admin-sa-binding
          subjects:
            - kind: ServiceAccount
              name: dashboard-admin-sa
              namespace: kubernetes-dashboard
          roleRef:
            kind: ClusterRole
            name: cluster-admin
            apiGroup: rbac.authorization.k8s.io
      when: new_sa_created | default(false)

    - name: Generate a new token if none exists
      shell: |
        kubectl -n kubernetes-dashboard create token dashboard-admin-sa
      register: dashboard_token
      when: new_sa_created | default(false)

    - name: Show the generated token
      debug:
        msg: "Use this token to log in: {{ dashboard_token.stdout }}"
      when: new_sa_created | default(false)

    - name: Inform that token already exists
      debug:
        msg: "A token already exists for the service account."
      when: not new_sa_created | default(false)
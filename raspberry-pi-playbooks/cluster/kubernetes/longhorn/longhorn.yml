---
- name: Install Longhorn on Kubernetes
  hosts: control_plane
  become: true
  gather_facts: false

  environment:
    K8S_AUTH_KUBECONFIG: /etc/rancher/k3s/k3s.yaml

  tasks:
    - name: Add Longhorn Helm repo
      kubernetes.core.helm_repository:
        name: longhorn
        repo_url: https://charts.longhorn.io

    - name: Create longhorn-system namespace
      kubernetes.core.k8s:
        state: present
        kind: Namespace
        name: longhorn-system

    - name: Install Longhorn via Helm
      kubernetes.core.helm:
        name: longhorn
        chart_ref: longhorn/longhorn
        release_namespace: longhorn-system
        create_namespace: false
        state: present
        values:
          persistence:
            defaultClass: true
            defaultClassReplicaCount: 3
          defaultSettings:
            defaultReplicaCount: 3
            replicaSoftAntiAffinity: true
            defaultDataPath: "/var/lib/longhorn"

    - name: Create Longhorn IngressRoute
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: traefik.io/v1alpha1
          kind: IngressRoute
          metadata:
            name: longhorn
            namespace: longhorn-system
          spec:
            entryPoints:
              - websecure
            routes:
              - match: Host(`longhorn.kubecluster`)
                kind: Rule
                services:
                  - name: longhorn-frontend
                    port: 80
            tls:
              certResolver: default

    - name: Wait for Longhorn pods to be ready
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: longhorn-system
      register: longhorn_pods
      until: >
        longhorn_pods.resources
        | selectattr('status.containerStatuses', 'defined')
        | map(attribute='status.containerStatuses')
        | flatten
        | selectattr('ready', 'equalto', true)
        | list
        | length >= longhorn_pods.resources | length
      retries: 30
      delay: 10

    - name: Patch default storage class (optional)
      kubernetes.core.k8s:
        kind: StorageClass
        name: longhorn
        api_version: storage.k8s.io/v1
        definition:
          metadata:
            annotations:
              storageclass.kubernetes.io/is-default-class: "true"